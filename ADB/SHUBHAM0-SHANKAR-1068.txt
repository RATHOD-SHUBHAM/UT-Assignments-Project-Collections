Advance Database
Assignment - 1 



Name 	: SHUBHAM SHANKAR
UTA ID	: 1001761068


========================================================================================================================================================================================
QUESTION 1 + Search for Chris (Name) and show his picture on a web page.

Answer : 
		
		# question 1
@app.route('/forms',methods = ['GET','POST'])
# establishing connection with data base
def formHandler():
	# request firstname from form
	name = str(request.form['fname'])
	print("The name is : ",name)

	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials
	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()

	sql = "SELECT \"picture\" from PeopleTable where \"Name\" = \'"+name+"\'"
	myCursor.execute(sql)
	
	myResult = myCursor.fetchone()
	print(myResult)
	outputFile = "\static\\" + myResult[0]
	# print(" the output file is : ", myResult[0])
	return render_template('myResult.html',output = outputFile)


INDEX.HTML :
<br>
<h2> Question One : </h2>
<form action="/forms" method="POST" enctype="multipart/form-data">
    <label for="fname">First Name: </label><br>
    <input type = "text" id="fname" name="fname"><br><br>
    <input type="submit" value="Submit">
</form>
<br><br>



HTML FILE : 
<img src="{{output}}" alt="image not found" >


========================================================================================================================================================================================

QUESTION 2 + Search for (display) all pictures where the salary is less than 99000.

Answer : 

# question 2
@app.route('/buttons',methods = ['GET','POST'])
# establishing connection with data base
def displayAll():
	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials
	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()
	
	sql = ' SELECT \"picture\" from PeopleTable where \"salary\" < 99000 '
	# sql = " SELECT \"picture\" from PeopleTable where \"salary\" > 100 "

	myCursor.execute(sql)
	
	myResult = myCursor.fetchall()
	print("The Result is  :  ",myResult)
	resultAppend = []
	# list of tuples
	for i in myResult:
		# tuples values and second value is always NONE.
		for y in i:
			if y != None:
				outputFile = "\static\\" + y
				resultAppend.append(outputFile)
			else :
				outputFile = "Image not found"
				resultAppend.append(outputFile)

	return render_template('myResult2.html',output = resultAppend)

HTML FILE :

{% for i in output %}
<img src="{{i}}" alt="image not found" >
{% endfor %}


INDEX.HTML:
<h2> Question Two : </h2>
<form method="POST" action="/buttons">
    <button type="submit" value= "Submit">2nd Question</button>
</form>
<br>


========================================================================================================================================================================================
QUESTION 3 + Add a picture for Dave
ANSWER :

@app.route('/three', methods=['GET', 'POST'])
def addPicture():
	BASE_DIR = os.path.dirname(os.path.abspath(__file__))
	app.config['UPLOAD_DIR'] = os.path.join('static')

	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials

	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()
	
	send_dir = os.path.join(BASE_DIR,'static/')
	userFileName=""
	print(request)

	print(request.files)
	# taking the file from user
	for file in request.files.getlist('uploadfile'):
		print(file)
		print(file.filename)
		userFileName = file.filename
		target = "/".join([send_dir,userFileName])
			
		completeFilePath = os.path.join(app.config['UPLOAD_DIR'],userFileName)
		file.save(target)


	sql = "UPDATE PeopleTable SET \"picture\" = \'"+userFileName+"\' where \"Name\" = \'dave\'"
	myCursor.execute(sql)
	print(sql)

	sql = "SELECT \"picture\" from PeopleTable where \"Name\" = 'dave'"
	myCursor.execute(sql)

	myResult = myCursor.fetchone()
	print(myResult)
	
	outputFile = "\static\\" + myResult[0]
	return render_template('myResult3.html',output = outputFile)


HTML FILE : 
<img src="{{output}}" alt="image not found" >


INDEX.HTML : 
<h2> Question Three : </h2>
<form method= "POST" action = "/three" enctype="multipart/form-data">
    <label for = "filename"> filename : </label>
    <input type = "file" id="uploadfile" name="uploadfile"><br><br>
    <input type = "submit" value="Submit">
</form>






========================================================================================================================================================================================
QUESTION 4  + Remove Dave

ANSWER : 


@app.route('/four',methods = ['GET','POST'])
# establishing connection with data base
def deletePerson():
	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials
	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()

	sql = " DELETE FROM PeopleTable where \"Name\" = \'dave\' "
	myCursor.execute(sql)
	
	sql = 'SELECT * FROM PeopleTable '
	# sql = " SELECT \"picture\" from PeopleTable where \"salary\" > 100 "
	myCursor.execute(sql)
	
	myResult = myCursor.fetchall()
	print("The Result is  :  ",myResult)
	return render_template('myResult4.html',output = myResult)



HTML FILE : 
<h2>Dave has been deleted</h2>
{% for i in output %}
<p>{{i}}</p>
{% endfor %}



INDEX.HTML : 

<h2> Question Four : </h2>
<form method="POST" action="/four">
    <button type="submit" value= "Submit">Delete Dave</button>
</form>


========================================================================================================================================================================================
QUESTION 5  + Change Jason’s keywords to “Not so nice anymore”

Answer : 

@app.route('/five',methods = ['GET','POST'])
# establishing connection with data base
def changeKeyword():
	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials
	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()
	
	sql = "UPDATE PeopleTable SET \"keywords\"=\'Not so nice anymore\' where \"Name\"=\'jason\'"
	myCursor.execute(sql)

	sql = "select * from PeopleTable"
	myCursor.execute(sql)
	

	myResult = myCursor.fetchall()
	# print(myResult)
	
	return render_template('myResult5.html',output = myResult)

HTML FILE : 

<h2> Jason's Keyword Changed to Not So Nice Anymore </h2>
{% for i in output %}
<p>{{i}}</p>
{% endfor %}



INDEX.HTML : 

<h2> Question Five : </h2>
<form method="POST" action="/five">
    <button type="submit" value= "Submit">Change Jason's Keyword</button>
</form>

========================================================================================================================================================================================
QUESTION 6 + Change Someone’s salary
Answer :

python code : 

@app.route('/six',methods = ['GET','POST'])
# establishing connection with data base
def changeSalary():
	salary = float(request.form['salary'])
	print("The salary is : ",salary)

	# connect using ibm_db_dbi. Attempt to establish A connection with uncataloged database.
	# using service credentials
	conn = ibm_db_dbi.connect(
		"DATABASE=BLUDB;HOSTNAME=dashdb-txn-sbox-yp-dal09-11.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=kbr80736;PWD=nh9xt1^9nrcbv0pz;", "", ""
		)
	# fetch data using ibm_db_dbi
	myCursor = conn.cursor()
	
	sql = " UPDATE PeopleTable SET \"salary\" = \'"+str(salary)+"\' where \"Name\" = \'someone\' "
	myCursor.execute(sql)

	sql = "SELECT \"Name\",\"salary\" from PeopleTable"
	myCursor.execute(sql)
	
	myResult = myCursor.fetchall()
	print(myResult)


	return render_template('myResult6.html',output = myResult)


HTML CODE : 

<h2> Someone's Salary is changed</h2>
{% for i in output %}
<p>{{i}}</p>
{% endfor %}

INDEX.HTML :

<h2> Question Six : </h2>
<form method="POST" action="/six">
    <input type = "number" id = "salary" name="salary"><br><br>
    <button type="submit" value= "Submit">Change Someone's Salary</button>
</form>


---------------------------------------------------------- ASSIGNMENT ENDS ---------------------------------------------------------------------------------------------------------------------
